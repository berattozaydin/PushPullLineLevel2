@using BlazorUI.Components.Users;
@inject DialogService dialogService;
<AuthorizeView>
    <Authorized>
        <RadzenMenu class="radzenMenu text-center navbar navbar-expand-lg navbar-light">

            <RadzenMenuItem class="w-50" Text="Hat İzleme" Path="Traking"></RadzenMenuItem>
            <RadzenMenuItem class="w-50" @ref="radzenMenuItemRef" Text="Bobin Bilgileri">
                <RadzenMenuItem Icon="donut_large" Text="Pdi" class="w-50" Path="Pdi"></RadzenMenuItem>
                <RadzenMenuItem Icon="save" Text="Pdo" class="w-50" Path="pdo"></RadzenMenuItem>
            </RadzenMenuItem>
            <RadzenMenuItem class="w-50" Text="Duruşlar" Path="Delays"></RadzenMenuItem>
            <RadzenMenuItem class="w-50" Text="Olay Günlükleri" Path="EvtAlm"></RadzenMenuItem>
            <RadzenMenuItem Text="Hat Ayarları">
                <RadzenMenuItem Icon="donut_large" Text="Vardiya Formeni" Click="()=>ChangeShiftForeman()" class="subItem fs-6"></RadzenMenuItem> 
                <RadzenMenuItem Text="Leveler Ayarları" Path="Leveler" class="fs-6"></RadzenMenuItem>
                <RadzenMenuItem Text="Kaliteler" class="fs-6"></RadzenMenuItem>
                <RadzenMenuItem Text="Reçeteler" class="fs-6"></RadzenMenuItem>
            </RadzenMenuItem>
            <RadzenMenuItem Text="Sistem Ayarları">
                <RadzenMenuItem Icon="donut_large" Text="Yönetim Paneli" Path="SystemControlPanel" class="subItem fs-6"></RadzenMenuItem>
            </RadzenMenuItem>
        </RadzenMenu>
    </Authorized>
    <NotAuthorized>
    </NotAuthorized>
</AuthorizeView>

<style>
    .radzenMenu {
        max-width: 60% !important;
        
    }

    .rz-menu {
        background-color: white !important;
    }

   
    .radzenMenu .rz-navigation-item-link {
        margin-left: 1.5rem;
        width: 155px;
        margin-top: auto;
        height: 35px;
        border-radius:5px !important;
        background-color: #3a8aec !important;
        text-decoration-color: unset !important;
        
    }
   @@media only screen and (max-width: 500px) {
  .radzenMenu .rz-navigation-item-link {
        margin-left: -6rem;
        width: 15rem;
        margin-top: auto;
        height: 35px;
        border-radius:5px !important;
        background-color: #3a8aec !important;
        text-decoration-color: unset !important;
        
    }

        .rz-navigation-menu {
            width: 15rem !important;
            margin-left: -2rem !important;
            border-color: white;
            padding: 0 !important;
            top: 2.55rem !important;
            border-style: solid;
            border-radius: 5px !important;
            background-color: #3a8aec !important;
        }

}
    .rz-navigation-item-link:hover {
        background-color: red !important;
    }

    .rz-navigation-item-link .rz-navigation-item-icon-children {
        display: none;
    }

    .rz-navigation-menu {
        width: 155px !important;
        margin-left: 0.75rem !important;
        border-color: white;
        padding:0 !important;
        top:2.55rem !important;
        border-style: solid;
        border-radius: 5px !important;
        background-color: #3a8aec !important;
    }

        .rz-navigation-menu .rz-navigation-item-link {
            width: 175px !important;
            margin: auto !important;
            text-align: center !important;
            color: white !important;
        }

        .rz-menu-toggle{
            color:black !important;
        }

    .rz-menu-toggle-item{
        padding:0 !important;
    }
</style>
@code {
    private bool collapseNavMenu = true;
    public RadzenMenuItem radzenMenuItemRef;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    async Task ChangeShiftForeman()
    {
        DialogOptions dialogOptions = new DialogOptions
            {
                Width = "330px",
                Height = "290px",
                ShowTitle = true,
                CssClass = "rounded-1"
            };
        Dictionary<string, object> dict = new Dictionary<string, object>()
        {
          
        };
        var result = await dialogService.OpenAsync<ShiftChangeDlg>("Vardiya Formeni Değiştir", dict, dialogOptions);
    }
}
