@using BlazorDAL.Models;
@using BlazorUI.Api;
@inject DialogService dialogService;
<fieldset class="border rounded-3 p-3">
    <div class="row">
      <legend class="col-form-label col-sm-2 pt-0">Bobin Bilgileri</legend>
    <RadzenRow Gap="2rem" Class="rz-p-0 rz-p-lg-4">
        <RadzenColumn Size="12" SizeMD="12">
           <div class="container text-center">

              <div class="row">
                    <div class="col-sm">
                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="text-align:center">Bobin Numarası</RadzenText>
                        <RadzenTextBox @bind-Value=customerOrderDto.Name class="textBox"></RadzenTextBox>
                    </div>
                <div class="col-sm">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="text-align:center">Sipariş Numarası</RadzenText>
                    <RadzenTextBox @bind-Value=customerOrderDto.OrderNumber class="textBox"></RadzenTextBox>
                </div>
                <div class="col-sm">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="text-align:center">Sipariş Numarası</RadzenText>
                    <RadzenTextBox @bind-Value=customerOrderDto.OrderNumber class="textBox"></RadzenTextBox>
                </div>
                </div>
                   <div class="row">
                    <div class="col-sm">
                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="text-align:center">Bobin Numarası</RadzenText>
                        <RadzenTextBox @bind-Value=customerOrderDto.Name class="textBox"></RadzenTextBox>
                    </div>
                <div class="col-sm">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="text-align:center">Sipariş Numarası</RadzenText>
                    <RadzenTextBox @bind-Value=customerOrderDto.OrderNumber class="textBox"></RadzenTextBox>
                </div>
                <div class="col-sm">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="text-align:center">Sipariş Numarası</RadzenText>
                    <RadzenTextBox @bind-Value=customerOrderDto.OrderNumber class="textBox"></RadzenTextBox>
                </div>
                </div>
                   <div class="row">
                    <div class="col-sm">
                        <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="text-align:center">Bobin Numarası</RadzenText>
                        <RadzenTextBox @bind-Value=customerOrderDto.Name class="textBox"></RadzenTextBox>
                    </div>
                <div class="col-sm">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="text-align:center">Sipariş Numarası</RadzenText>
                    <RadzenTextBox @bind-Value=customerOrderDto.OrderNumber class="textBox"></RadzenTextBox>
                </div>
                <div class="col-sm">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="text-align:center">Sipariş Numarası</RadzenText>
                    <RadzenTextBox @bind-Value=customerOrderDto.OrderNumber class="textBox"></RadzenTextBox>
                </div>
                </div>

           </div>
        </RadzenColumn>
    </RadzenRow>
    </div>
    </fieldset>
<div class="row justify-content-end mt-3 mr-1">
   <div class="col-2">
    <RadzenButton Icon="done" Style="background-color:blue;color:white" class="dlgBtn" Click="@SaveCustomerOrder" Text="Kaydet" />
</div>
    <div class="col-2">
    <RadzenButton Style="color:white;background-color:red;" ButtonStyle="ButtonStyle.Danger" class="dlgBtn" Click="@CloseDialog" Text="İptal" />
    </div>
</div>

<style>
    .dlgBtn {
        border: 1px 2px;
        border-radius: 10px;
    }

</style>
@code {
    [Parameter]
    public string CustomerOrderId { get; set; } = "";

    [Parameter]
    public string dlgType { get; set; } = "create";

    private CustomerOrderDto customerOrderDto = new CustomerOrderDto { };
    [Inject]
    CustomerOrderApi itemApi { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (dlgType == "create")
        {
            customerOrderDto = new CustomerOrderDto { };
        }
        if (dlgType == "update")
        {
            customerOrderDto = await itemApi.GetCustomerOrder(CustomerOrderId);
        }
        await base.OnInitializedAsync();

    }
    void CloseDialog()
    {

        dialogService.Close(true);

    }
    async void SaveCustomerOrder()
    {
        customerOrderDto.CustomerId = 1;

        if (dlgType == "create")
        {
            customerOrderDto.CustomerOrderId = Guid.NewGuid().ToString();
            customerOrderDto.CreatedDate = DateTime.Now;
            await itemApi.AddCustomerOrder(customerOrderDto);

        }
        if (dlgType == "update")
        {
            await itemApi.UpdateCustomerOrder(customerOrderDto);
        }
        CloseDialog();
    }

}
