@using BlazorDAL.Models;
@using BlazorUI.Api;
@inject DialogService dialogService;

<div class="container text-center">
    <div class="row">
        <div class="col">
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="text-align:center">Duruş Numarası</RadzenText>
            <RadzenNumeric @bind-Value=delayDto.ID ReadOnly class="textBox"></RadzenNumeric>
        </div>
        <div class="col">
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="text-align:center">Durum</RadzenText>
        </div>
        <div class="col">
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Style="text-align:center">Açıklaması</RadzenText>
            <RadzenTextBox @bind-Value=delayDto.REMARK class="textBox"></RadzenTextBox>
        </div>
    </div>
    <div class="row justify-content-end mt-3 mr-1">
        
            <div class="col-2">
                <RadzenButton Style="background-color:blue;color:white" Click="(()=>Save())" Variant="Variant.Flat" Shade="Shade.Lighter" Icon="done" class="m-1 btn" Text="Kaydet" />
            </div>
            <div class="col-2">
            <RadzenButton Style="color:white;background-color:red;" Click="(()=>CloseDlg())" Variant="Variant.Flat" Shade="Shade.Lighter" Icon="delete" class="m-1 btn" Text="İptal" />
            </div>
        
        
    </div>
</div>
<style>
    .btn {
        padding:2px;
        width:8rem;
        height:2rem;
        border-radius:10px;
    }
    .textBox{
        border-radius:5px !important;
        height:2.3rem !important;
        width:200px !important;

    }
</style>

@code {
    [Parameter]
    public int DelayId { get; set; }

    [Parameter]
    public string dlgType { get; set; } = "create";

    private DelayDto delayDto = new DelayDto { };
    [Inject]
    DelayApi itemApi { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (dlgType == "create")
        {
            delayDto = new DelayDto { };
        }
        if (dlgType == "update")
        {
            delayDto = await itemApi.GetDelay(DelayId);
        }
        await base.OnInitializedAsync();

    }
    void Save()
    {
        
    }
    void CloseDlg()
    {

        dialogService.Close(true);

    }
}
