@page "/Delays"
@using BlazorDAL.Models;
@using BlazorUI.Api;
@using BlazorUI.Components.Delay;
@using Microsoft.AspNetCore.Components.WebAssembly.Services;
@inject DialogService dialogService;
@attribute [Authorize]
<PageTitle>Duruşlar</PageTitle>
<RadzenCard style="display: flex; align-items: center; gap: 0.5rem;background-color:#c6c3c6;">
    <div class="m-auto">
        <RadzenCard class="mx-auto " style="display: flex; text-align:end; align-items:end; gap: 0.6rem;background-color:#c6c3c6;">
            <div class="container">
                <div class="row float-end">
                    <div class="col-6">
                        <RadzenButton Text="Ekle" Style="border-radius:20px;" ButtonStyle="ButtonStyle.Success" Click="@(()=>OpenCustomerOrderDlg(null,"create"))" Icon="add_circle_outline"></RadzenButton>
                    </div>
                    <div class="col-6">
                        <RadzenButton Text="Yenile" Style="border-radius:20px;" ButtonStyle="ButtonStyle.Primary" Click="@(()=>GetAll())" Icon="refresh"></RadzenButton>

                    </div>
                </div>
            </div>
        </RadzenCard>
        <RadzenDataGrid @ref="radzenDataGrid"
                        FilterText="Ara..."
                        AllowFiltering="true"                   
                        AllowAlternatingRows="false"
                        FilterMode="FilterMode.Simple"
                        AllowSorting="true"
                        Filter="@OnFilter"
                        AllowPaging="true"
                        PagerHorizontalAlign="HorizontalAlign.Left"
                        Data="@customerOrderDtos"
                        TItem="CustomerOrderDto"
                        Style="background-color:#c6c3c6; --rz-cell-filter-width:20px"
                        GridLines="DataGridGridLines.Both"
                        SelectionMode="DataGridSelectionMode.Single"
                        Density="Density.Compact"
                        RowRender="@RowRender"
                        >
            <Columns>

                <RadzenDataGridColumn TItem="CustomerOrderDto" Filterable Property="CustomerOrderId" Title="Bobin Numarası" Width="50px" />
                <RadzenDataGridColumn TItem="CustomerOrderDto" Property="CustomerOrderStatusName" Title="Bobin Durumu" Width="50px" />
                <RadzenDataGridColumn TItem="CustomerOrderDto" Property="Name" Title="Kalınlık" Width="50px" />
                <RadzenDataGridColumn TItem="CustomerOrderDto" Property="Remark" Title="Genişlik" Width="50px" />
                <RadzenDataGridColumn TItem="CustomerOrderDto" Property="OrderNumber" Title="Ağırlık" Width="50px" />
                <RadzenDataGridColumn TItem="CustomerOrderDto" Property="OrderNumber" Title="Uzunluk" Width="50px" />
                <RadzenDataGridColumn TItem="CustomerOrderDto" Property="OrderNumber" Title="İç Çap" Width="50px" />
                <RadzenDataGridColumn TItem="CustomerOrderDto" Property="OrderNumber" Title="Dış Çap" Width="50px" />
                <RadzenDataGridColumn TItem="CustomerOrderDto" Property="CustomerOrderId" Title="İşlemler" Width="50px">
                    <Template Context="data">
                        <RadzenButton ButtonStyle="ButtonStyle.Warning" Variant="Variant.Flat" Shade="Shade.Lighter" Icon="pageview" class="h-25 m-1" Click="@(()=>OpenCustomerOrderDlg(data.CustomerOrderId,"update"))" />
                        <RadzenButton ButtonStyle="ButtonStyle.Danger" Variant="Variant.Flat" Shade="Shade.Lighter" Icon="delete" class="h-25 m-1" Click="@(()=>DeleteCustomerOrder(data))" />
                        <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Shade="Shade.Lighter" Icon="list" class="h-25 m-1" Click="@(()=>ChangePdiStatus(data.CustomerOrderId))" />
                    </Template>
                </RadzenDataGridColumn>
            </Columns>
            </RadzenDataGrid>
        </div>
        </RadzenCard>
@code {

}
