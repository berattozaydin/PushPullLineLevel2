@page "/home"
@using BlazorDAL.Models;
@using Microsoft.AspNetCore.SignalR.Client;

@inject NavigationManager NavigationManager;
<PageTitle>@message</PageTitle>
<div>

    @counter
</div>
@code {
    private HubConnection hubConnection;
    private string _message;
    private List<EvtAlmDto> evtAlmDto;
    [Inject]
    NavigationManager navigationManager { get; set; }
    private int _counter;
    public int counter
    {
        get { return _counter; }
        set
        {
            if (_counter == value) return;
            _counter = value;
        }
    }
    public string message
    {
        get { return _message; }
        set
        {
            if (_message == value) return;
            _message = value;
        }
    }
    protected override async Task OnInitializedAsync()
    {
        await ConnectWebSocketAsync();
    }
    private async Task ConnectWebSocketAsync()
    {
        string url = "http://localhost:5213/websocket?pagename=";
        string navigation = navigationManager.BaseUri + "/websocket?pagename=";
        var pn = "/home";
        hubConnection = new HubConnectionBuilder()
        .WithUrl(url + pn)
        .WithAutomaticReconnect()
        .Build();
        await StartSignalRSocketAsync();
    }
    private async Task StartSignalRSocketAsync()
    {
        try
        {
            await hubConnection.StartAsync();
            ReceiveMessage();
        }
        catch (Exception ex)
        {
            await ConnectWebSocketAsync();
        }
    }
    private void ReceiveMessage()
    {
        hubConnection.On<string, CounterList>("Trk", (user, message) =>
      {
          this.counter = message.Counter;
          StateHasChanged();
      });
    }
    public class CounterList
    {
        public int Counter { get; set; } = 0;
    }
}
